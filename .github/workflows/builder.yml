name: Builder
on: [push, pull_request]
env:
  POSTGRES_DATABASE: postgres
  POSTGRES_USERNAME: doggiedb
  POSTGRES_PASSWORD: doggiedb
  MONGO_DATABASE: doggiedb
  MONGO_USERNAME: doggiedb
  MONGO_PASSWORD: doggiedb
  MONGO_AUTHSOURCE: admin
jobs:
  macos:
    name: ${{ matrix.name }}
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        name: [macOS, macOS(SwiftPM)]
        include:
          - name: macOS
            use_xcodebuild: true
            sdk: macosx
            destination: 'platform=macOS'
            enable_codecov: true
          - name: macOS(SwiftPM)
            use_xcodebuild: false
          - username: root
          - formula: mariadb
            username: runner
    env:
      use_xcodebuild: ${{ matrix.use_xcodebuild }}
      schemes: DoggieDB-Package
      sdk: ${{ matrix.sdk }}
      destination: ${{ matrix.destination }}
      enable_codecov: ${{ matrix.enable_codecov }}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Initialize containers 
      run: |
        echo ::group::Starting PostgreSQL service
        export PATH="/usr/local/opt/postgresql/bin:$PATH" PGDATA=/tmp/postgres-test
        brew install postgresql
        initdb --locale=C -U $POSTGRES_USERNAME --pwfile=<(echo $POSTGRES_PASSWORD)
        pg_ctl start --wait
        echo ::endgroup::
        echo ::group::Starting Redis service
        brew install redis && brew services start redis
        echo ::endgroup::
        echo ::group::Starting MongoDB service
        brew services start mongodb-community
        until echo | mongo 'admin' --eval 'quit(0)'; do sleep 1; done
        SCRIPT=$(cat <<-EOJS
          db.createUser({
            user: "$MONGO_USERNAME",
            pwd: "$MONGO_PASSWORD",
            roles: [ { role: 'root', db: "$MONGO_AUTHSOURCE" } ]
          })
        EOJS
        )
        mongo 'admin' --eval "$SCRIPT"
        echo ::endgroup::
      timeout-minutes: 10
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
      env:
        POSTGRES_HOST: localhost
        REDIS_HOST: localhost
        MONGO_HOST: localhost
    - uses: codecov/codecov-action@v1
      if: ${{ matrix.enable_codecov }}
  ubuntu_swift:
    name: ${{ matrix.image }}
    container: 
      image: docker://swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DATABASE }}
      redis:
        image: redis
        ports: 
          - 6379:6379
      mongo: 
        image: mongo
        ports: 
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_DATABASE }}
    strategy:
      fail-fast: false
      matrix:
        image: [5.3-xenial, 5.3-bionic, 5.3-focal, 5.4-xenial, 5.4-bionic, 5.4-focal]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Prepare		
      run: apt-get update
    - name: Install libmongoc
      run: apt-get install -y libmongoc-1.0-0 libssl-dev
    - name: Install sqlite3
      run: apt-get install -y libsqlite3-dev
    - name: Install JavaScriptCore
      run: apt-get update && apt-get install -y libjavascriptcoregtk-4.0-dev
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
      env:
        POSTGRES_HOST: postgres
        REDIS_HOST: redis
        MONGO_HOST: mongo
  linux_swift:
    name: ${{ matrix.image }}
    container:
      image: docker://swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DATABASE }}
      redis:
        image: redis
        ports: 
          - 6379:6379
      mongo: 
        image: mongo
        ports: 
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_DATABASE }}
    strategy:
      fail-fast: false
      matrix:
        image: [5.3-centos8, 5.4-centos8]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Prepare		
      run: yum update -y
    - name: Install libmongoc
      run: yum install -y mongo-c-driver openssl-devel
    - name: Install sqlite3
      run: yum install -y sqlite-devel
    - name: Install JavaScriptCore
      run: yum update -y && yum install -y webkit2gtk3-jsc-devel
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
      env:
        POSTGRES_HOST: postgres
        REDIS_HOST: redis
        MONGO_HOST: mongo
  ubuntu_swift_nightly:
    name: ${{ matrix.image }}
    container:
      image: docker://swiftlang/swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DATABASE }}
      redis:
        image: redis
        ports: 
          - 6379:6379
      mongo: 
        image: mongo
        ports: 
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_DATABASE }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        image: [nightly-xenial, nightly-bionic, nightly-focal]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Prepare		
      run: apt-get update
    - name: Install libmongoc
      run: apt-get install -y libmongoc-1.0-0 libssl-dev
    - name: Install sqlite3
      run: apt-get install -y libsqlite3-dev
    - name: Install JavaScriptCore
      run: apt-get update && apt-get install -y libjavascriptcoregtk-4.0-dev
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
      env:
        POSTGRES_HOST: postgres
        REDIS_HOST: redis
        MONGO_HOST: mongo
  linux_swift_nightly:
    name: ${{ matrix.image }}
    container:
      image: docker://swiftlang/swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DATABASE }}
      redis:
        image: redis
        ports: 
          - 6379:6379
      mongo: 
        image: mongo
        ports: 
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_DATABASE }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        image: [nightly-centos8]
        include:
          - image: nightly-centos8
            jsc: webkit2gtk3-jsc-devel
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Prepare		
      run: yum update -y
    - name: Install libmongoc
      run: yum install -y mongo-c-driver openssl-devel
    - name: Install sqlite3
      run: yum install -y sqlite-devel
    - name: Install JavaScriptCore
      run: yum update -y && yum install -y ${{ matrix.jsc }}
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
      env:
        POSTGRES_HOST: postgres
        REDIS_HOST: redis
        MONGO_HOST: mongo
