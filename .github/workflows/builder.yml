name: Builder
on: [push, pull_request]
env:
  MYSQL_HOST: mysql
  MYSQL_DATABASE: doggiedb
  MYSQL_USERNAME: doggiedb
  MYSQL_PASSWORD: doggiedb
  POSTGRES_HOST: postgres
  POSTGRES_DATABASE: doggiedb
  POSTGRES_USERNAME: doggiedb
  POSTGRES_PASSWORD: doggiedb
  REDIS_HOST: redis
  REDIS_DATABASE: doggiedb
  MONGO_HOST: mongo
  MONGO_DATABASE: doggiedb
  MONGO_USERNAME: doggiedb
  MONGO_PASSWORD: doggiedb
jobs:
  macos:
    name: ${{ matrix.name }}
    runs-on: macOS-latest
    strategy:
      matrix:
        name: [macOS, macOS(SwiftPM)]
        include:
          - name: macOS
            use_xcodebuild: true
            sdk: macosx
            destination: 'platform=macOS'
            enable_codecov: true
          - name: macOS(SwiftPM)
            use_xcodebuild: false
    env:
      use_xcodebuild: ${{ matrix.use_xcodebuild }}
      sdk: ${{ matrix.sdk }}
      destination: ${{ matrix.destination }}
      enable_codecov: ${{ matrix.enable_codecov }}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Install docker
      uses: docker-practice/actions-setup-docker@master
    - name: Setup MySQL
      run: |
        docker run -d \
        --network-alias mysql \
        -p 3306:3306 \
        -e MYSQL_ALLOW_EMPTY_PASSWORD=true \
        -e MYSQL_USER=$MYSQL_USER \
        -e MYSQL_PASSWORD=$MYSQL_PASSWORD \
        -e MYSQL_DATABASE=$MYSQL_DATABASE \
        mariadb
    - name: Setup PosegreSQL
      run: |
        docker run -d \
        --network-alias postgres \
        -p 5432:5432 \
        -e POSTGRES_USER=$POSTGRES_USER \
        -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
        -e POSTGRES_DB=$POSTGRES_DATABASE \
        postgres
    - name: Setup Redis
      run: |
        docker run -d \
        --network-alias redis \
        -p 6379:6379 redis
    - name: Setup Mongo
      run: |
        docker run -d \
        --network-alias mongo \
        -p 27017:27017 \
        -e MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME \
        -e MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD \
        -e MONGO_INITDB_DATABASE=$MONGO_DATABASE \
        mongo
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
    - uses: codecov/codecov-action@v1
      if: ${{ matrix.enable_codecov }}
  ubuntu_swift_latest:
    name: latest-${{ matrix.image }}
    container: 
      image: docker://swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb
        ports: 
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_USER: ${{ env.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DATABASE }}
      redis:
        image: redis
        ports: 
          - 6379:6379
      mongo: 
        image: mongo
        ports: 
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_DATABASE }}
    strategy:
      matrix:
        image: [xenial, bionic, focal]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Prepare		
      run: apt-get update
    - name: Install libmongoc
      run: apt-get install -y libmongoc-1.0-0 libbson-1.0-0 libssl-dev
    - name: Install sqlite3
      run: apt-get install -y libsqlite3-dev
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
  ubuntu_swift_nightly:
    name: ${{ matrix.image }}
    container:
      image: docker://swiftlang/swift:${{ matrix.image }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb
        ports: 
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_USER: ${{ env.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DATABASE }}
      redis:
        image: redis
        ports: 
          - 6379:6379
      mongo: 
        image: mongo
        ports: 
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ env.MONGO_DATABASE }}
    continue-on-error: true
    strategy:
      matrix:
        image: [nightly-xenial, nightly-bionic, nightly-focal]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Prepare		
      run: apt-get update
    - name: Install libmongoc
      run: apt-get install -y libmongoc-1.0-0 libbson-1.0-0 libssl-dev
    - name: Install sqlite3
      run: apt-get install -y libsqlite3-dev
    - name: Build
      uses: SusanDoggie/swift-action@main
      with:
        action: build
    - name: Run tests
      uses: SusanDoggie/swift-action@main
      with:
        action: test
